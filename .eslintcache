[{"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\index.js":"1","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\App.js":"2","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\reportWebVitals.js":"3","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\pages\\home\\index.js":"4","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\pages\\home\\view.jsx":"5","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\controllers\\ServiceFactory.js":"6","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\controllers\\ServiceInteractor.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":149,"mtime":1607993342159,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2597,"mtime":1608145982773,"results":"12","hashOfConfig":"9"},{"size":4871,"mtime":1608145954763,"results":"13","hashOfConfig":"9"},{"size":254,"mtime":1608146021857,"results":"14","hashOfConfig":"9"},{"size":1261,"mtime":1608052077048,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"58w449",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\index.js",[],["32","33"],"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\App.js",[],"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\reportWebVitals.js",[],"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\pages\\home\\index.js",["34","35"],"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\pages\\home\\view.jsx",["36","37","38"],"import React from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n  FormGroup,\r\n  Label,\r\n  Collapse\r\n} from \"reactstrap\";\r\n\r\nimport retweet from '../../assets/retweet.png';\r\n\r\nimport indexStyles from './index.module.scss';\r\n\r\nexport default function view({\r\n  setQuery,\r\n  handleGetTweets,\r\n  listTweets,\r\n  handleToggleCollapse,\r\n  lastTweetRef,\r\n  loading,\r\n  query,\r\n  handleReTweet\r\n}) {\r\n  return (\r\n    <div className={indexStyles.generalContainerHome}>\r\n      <FormGroup row>\r\n        <Label for=\"tweets\" sm={2}>Tweet Search</Label>\r\n        <Col sm={10}>\r\n          <InputGroup>\r\n            <Input value={query} placeholder={'search...'} onChange={e => {\r\n                  if( /[^a-zA-Z0-9\\-\\/]/.test( e.target.value ) ) {\r\n                    return false;\r\n                }\r\n                setQuery(e.target.value)\r\n            }} />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick={handleGetTweets} color=\"primary\">Search</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n        </Col>\r\n      </FormGroup>\r\n      {\r\n        loading ?\r\n          <h6>Cargando...</h6>\r\n          :\r\n          <Row>\r\n            {\r\n              listTweets.length > 0 ?\r\n                listTweets.map((tweet, index) => {\r\n                  if (listTweets.length === index + 1) {\r\n                    return (\r\n                      <Col md={4} key={`tweet_${index}`} style={{ marginBottom: '10px' }} >\r\n                        <div className={indexStyles.targetTweet} ref={lastTweetRef}>\r\n                          <div className={indexStyles.headerTarget}>\r\n                            <img src={tweet.user.profile_image_url_https} />\r\n                            <div>\r\n                              <span className={indexStyles.nameUser}>{tweet.user.name}</span>\r\n                        @{tweet.user.screen_name}\r\n                            </div>\r\n                          </div>\r\n                          <div className={indexStyles.bodyTarget}>\r\n                            <span>\r\n                              {tweet.text.slice(0, 19)}...\r\n                      </span>\r\n                          </div>\r\n                          <div className={indexStyles.footerTarget}>\r\n                          <img src={retweet} alt=\"retweet\" onClick={e => handleReTweet(tweet.text)} />\r\n                    </div>\r\n                          {!tweet.isOpen ? <span onClick={() => handleToggleCollapse(index)} className={indexStyles.more}>Más...</span> : <span onClick={() => handleToggleCollapse(index)} className={indexStyles.more}>Ver menos ^</span>}\r\n\r\n                          <Collapse isOpen={tweet.isOpen}>\r\n                            <div className={indexStyles.footerTarget}>\r\n                              {tweet.text}\r\n                            </div>\r\n                          </Collapse>\r\n                        </div>\r\n                      </Col>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <Col md={4} key={`tweet_${index}`} style={{ marginBottom: '10px' }}>\r\n                        <div className={indexStyles.targetTweet}>\r\n                          <div className={indexStyles.headerTarget}>\r\n                            <img src={tweet.user.profile_image_url_https} />\r\n                            <div>\r\n                              <span className={indexStyles.nameUser}>{tweet.user.name}</span>\r\n                        @{tweet.user.screen_name}\r\n                            </div>\r\n                          </div>\r\n                          <div className={indexStyles.bodyTarget}>\r\n                            <span>\r\n                              {tweet.text.slice(0, 19)}...\r\n                      </span>\r\n                          </div>\r\n                          <div className={indexStyles.footerTarget}>\r\n                            <img src={retweet} alt=\"retweet\" onClick={e => handleReTweet(tweet.text)} />\r\n                          </div>\r\n                          {!tweet.isOpen ? <span onClick={() => handleToggleCollapse(index)} className={indexStyles.more}>Más...</span> : <span onClick={() => handleToggleCollapse(index)} className={indexStyles.more}>Ver menos ^</span>}\r\n\r\n                          <Collapse isOpen={tweet.isOpen}>\r\n                            <div className={indexStyles.footerTarget}>\r\n                              {tweet.text}\r\n                            </div>\r\n                          </Collapse>\r\n                        </div>\r\n                      </Col>\r\n                    )\r\n                  }\r\n\r\n                })\r\n                :\r\n                <Col className=\"text-center mt-5\">\r\n                  Esta busqueda no contiene registros\r\n            </Col>\r\n            }\r\n          </Row>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\controllers\\ServiceFactory.js",[],"C:\\Users\\Sociologo\\Documents\\wilmer\\aranda-test\\src\\controllers\\ServiceInteractor.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":26,"column":8,"nodeType":"45","endLine":26,"endColumn":17,"suggestions":"46"},{"ruleId":"43","severity":1,"message":"47","line":35,"column":8,"nodeType":"45","endLine":35,"endColumn":15,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":35,"column":37,"nodeType":"51","messageId":"52","endLine":35,"endColumn":38,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":59,"column":29,"nodeType":"56","endLine":59,"endColumn":77},{"ruleId":"54","severity":1,"message":"55","line":88,"column":29,"nodeType":"56","endLine":88,"endColumn":77},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'handleRenderTweets'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'listTweets'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setListTweetsTemp' needs the current value of 'listTweets'.",["60"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["61","62"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"messageId":"67","fix":"68","desc":"69"},{"messageId":"70","fix":"71","desc":"72"},"Update the dependencies array to be: [handleRenderTweets, loading]",{"range":"73","text":"74"},"Update the dependencies array to be: [count, listTweets]",{"range":"75","text":"76"},"removeEscape",{"range":"77","text":"78"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"79","text":"80"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1013,1022],"[handleRenderTweets, loading]",[1197,1204],"[count, listTweets]",[746,747],"",[746,746],"\\"]